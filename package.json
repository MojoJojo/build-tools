{
  "author": "",
  "bugs": {
    "url": "https://github.com/egis/build-tools/issues"
  },
  "dependencies": {},
  "description": "## for MacOS users: ```shell # install 'native' (not Apple-supplied) Python to be able to install 'glue' tool: brew install python",
  "devDependencies": {
    "babel": "^6.3.26",
    "babel-plugin-check-es2015-constants": "^6.3.13",
    "babel-plugin-external-helpers-2": "^6.3.13",
    "babel-plugin-transform-es2015-arrow-functions": "^6.4.0",
    "babel-plugin-transform-es2015-block-scoped-functions": "^6.3.13",
    "babel-plugin-transform-es2015-block-scoping": "^6.4.0",
    "babel-plugin-transform-es2015-classes": "^6.4.0",
    "babel-plugin-transform-es2015-computed-properties": "^6.4.0",
    "babel-plugin-transform-es2015-destructuring": "^6.4.0",
    "babel-plugin-transform-es2015-for-of": "^6.3.13",
    "babel-plugin-transform-es2015-function-name": "^6.4.0",
    "babel-plugin-transform-es2015-literals": "^6.3.13",
    "babel-plugin-transform-es2015-object-super": "^6.4.0",
    "babel-plugin-transform-es2015-parameters": "^6.4.2",
    "babel-plugin-transform-es2015-shorthand-properties": "^6.3.13",
    "babel-plugin-transform-es2015-spread": "^6.4.0",
    "babel-plugin-transform-es2015-sticky-regex": "^6.3.13",
    "babel-plugin-transform-es2015-template-literals": "^6.3.13",
    "babel-plugin-transform-es2015-typeof-symbol": "^6.4.0",
    "babel-plugin-transform-es2015-unicode-regex": "^6.3.13",
    "babel-plugin-transform-regenerator": "^6.3.26",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-es2015-rollup": "^1.0.0",
    "bl": "^1.0.0",
    "bower": "1.4.1",
    "bulkify": "^1.1.1",
    "del": "^2.2.0",
    "fakey": "~0.0.8",
    "glob": "^6.0.3",
    "graceful-fs": "^4.1.2",
    "gulp": "^3.9.0",
    "gulp-add-src": "^0.2.0",
    "gulp-babel": "^6.1.1",
    "gulp-changed": "^1.3.0",
    "gulp-concat": "^2.6.0",
    "gulp-connect": "^2.3.1",
    "gulp-debug": "^2.1.2",
    "gulp-declare": "^0.3.0",
    "gulp-directory-map": "^0.1.2",
    "gulp-exit": "0.0.2",
    "gulp-filter": "^3.0.1",
    "gulp-flatten": "^0.2.0",
    "gulp-foreach": "^0.1.0",
    "gulp-glue": "",
    "gulp-gzip": "^1.2.0",
    "gulp-handlebars": "^4.0.0",
    "gulp-if": "^2.0.0",
    "gulp-ignore": "^2.0.1",
    "gulp-json-transform": "^0.3.0",
    "gulp-less": "^3.0.5",
    "gulp-main-bower-files": "^1.3.0",
    "gulp-plumber": "^1.0.1",
    "gulp-print": "^2.0.1",
    "gulp-pseudoconcat-js": "github:egis/gulp-pseudoconcat-js",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-resolve-dependencies": "^2.2.0",
    "gulp-rollup": "^1.7.0",
    "gulp-sass": "^2.1.1",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.1",
    "gulp-util": "^3.0.7",
    "gulp-webserver": "",
    "gulp-wrap": "^0.11.0",
    "gulp-zip": "^3.0.2",
    "is": "^3.1.0",
    "istanbul": "*",
    "jasmine-ajax": "^3.2.0",
    "jasmine-core": "^2.4.1",
    "karma": "^0.13.18",
    "karma-chrome-launcher": "^0.2.2",
    "karma-coffee-preprocessor": "^0.3.0",
    "karma-coverage": "^0.5.3",
    "karma-fixture": "^0.2.5",
    "karma-htmlfile-reporter": "^0.2.2",
    "karma-jasmine": "^0.3.6",
    "karma-jasmine-jquery": "^0.1.1",
    "karma-json-fixtures-preprocessor": "0.0.5",
    "karma-junit-reporter": "^0.3.8",
    "karma-sourcemap-loader": "^0.3.6",
    "karma-systemjs": "github:rolaveric/karma-systemjs#28b94c979516cd6eb4514b128d40f3517bb3903b",
    "karma-verbose-reporter": "^0.0.3",
    "karma-webdriver-launcher": "^1.0.4",
    "lazypipe": "^1.0.1",
    "lodash": "^3.10.1",
    "merge-stream": "^1.0.0",
    "minimatch": "^3.0.0",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "node-sass": "",
    "optimist": "^0.6.1",
    "path-type": "^1.1.0",
    "readable-stream": "^2.0.5",
    "rollup": "^0.24.0",
    "rollup-plugin-babel": "^2.3.8",
    "socket.io": "1.3.7",
    "semver": "^5.1.0",
    "source-map": "^0.5.3",
    "systemjs": "^0.19.13",
    "underscore": "^1.8.3",
    "unzip": "^0.1.11",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0"
  },
  "homepage": "https://github.com/egis/build-tools#readme",
  "license": "ISC",
  "main": "utils.js",
  "name": "build-tools",
  "optionalDependencies": {},
  "readme": "# Gulp based builds.\n\n## for MacOS users:\n```shell\n# install 'native' (not Apple-supplied) Python to be able to install 'glue' tool:\nbrew install python\n\n# install 'glue' tool needed by build:\nbrew install jpeg\npip install glue\n\n# install Karma globally for tests to start:\nnpm install -g karma-cli\n```\n\n## Build steps:\n* Copy and rename the seed_package.json to package.json\n* Run `npm run setup` to install and build all required dependencies \n* Run `npm run dev` to  build files suitable for wathcing and startup a watch server\n* Run `npm run build` to build a package suitable for production\n* Run `npm run test` to run karma test suites\n* Optional: Add an alias: `alias build='gulp --gulpfile node_modules/build-tools/Gulpfile.js --cwd ./'`\n  \n\n## Build pipeline\n\n###stlye/*.less, *.sass, *.css\n\tRun through SASS or LESS >  dist/ -> concat -> uglify -> gzip -> build/ \n\n###src/*.js\n\tBabel (ES6) > concat -> uglify -> gzip -> build/ \n\nConcatenation order is specifed by adding a @requires annotation into the file header:\n```javascript\n/**\n *\n * @requires utils/Utils.js\n * @requires Form.js\n */\n```\t\n\n\n\t\t\n###src/*.hbs\n\tHandlebars -> concat into main JS, available in browser as TEMPLATES['name without extension']\n\t\n\t\n###resources/*, *.html\n\tCopied as is to build directory\n\t\n###sprites/{set}/*.png|jpg|gif\n\nCompiles all images into a single sprite call {set}.png sprites can be used like:\n\n```html\n<span class=\"sprite-{set}-{filebase}\"/>\n```\n\n## Customizing builds using bower.json and package.json\n\n\n#### bower.json\nAll bower dependencies with main files are concatenanted together, this can be overriden in bower.json as follows:\n\n```json \n\"overrides\": {\n           \"bootstrap\": {\n               \"main\": [\n                    \"dist/js/bootstrap.js\",\n                    \"dist/css/bootstrap.css\", \n                    \"dist/css/bootstrap.css.map\"\n               ]\n           },\n }   \n```\n\nTo exclude certain large libraries from concatenantion list in exclude, the main files will be concated together and placed in build/<libray name>\n```json\n   \"standalone\": [\"handsontable\", \"codemirror\"]\n```\n\nTo exclude libraries that have already been packaged elsewhere:\n```json\n\"excludes\": [\"jquery\"]\n```\n\nTo copy entire directories from dependencies:\n\n```json\n\"directories\": {\n    \"fontawesome\": \"fonts/*\",\n    \"bootstrap\": \"fonts/*\"\n  },\n```\n\nTo create a plugin package:\n\n```json\n\"plugin\": \"PortalApp\",\n```\nThis will create a .zip instead of a .war and place all the compiled .js file in to a subdirectory *System/plugins/{plugin}*\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/egis/build-tools.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
